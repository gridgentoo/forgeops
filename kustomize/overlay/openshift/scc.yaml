kind: SecurityContextConstraints
apiVersion: security.openshift.io/v1
metadata:
  name: forgerock-restricted
  kubernetes.io/description: |
    limit container to run defined by the runAsUser in the container template
    required by AM and DS applications
readOnlyRootFilesystem: false
allowPrivilegedContainer: false
runAsUser:
  type: MustRunAs
seLinuxContext:
  type: RunAsAny
fsGroup:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
users:
- forgerock-services
volumes:
- configMap
- downwardAPI
- emptyDir
- persistentVolumeClaim
- projected
- secret
---
kind: SecurityContextConstraints
apiVersion: security.openshift.io/v1
metadata:
  name: forgerock-privileged
  kubernetes.io/description: |
   allows nginx to run as root and setuid to http user
   drops most commonly not required seccomp capabilities
   https://www.redhat.com/en/blog/secure-your-containers-one-weird-trick
   A few of the seccomp capabilities aren't dropped that are suggested due to
   nginx using those syscalls
readOnlyRootFilesystem: false
allowPrivilegedContainer: true
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: RunAsAny
fsGroup:
  type: RunAsAny
supplementalGroups:
  type: RunAsAny
users:
- forgerock-webserver
requiredDropCapabilities:
- DAC_OVERRIDE
- AUDIT_WRITE
- FSETID
- SYS_CHROOT
- FSETID
- SETPCAP
- NET_RAW
- SETFCAP
volumes:
- configMap
- downwardAPI
- emptyDir
- persistentVolumeClaim
- projected
- secret
